"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[12298],{66858:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>n,data:()=>d});var o=t(6199);const i={},n=(0,t(21065).A)(i,[["render",function(e,a){const t=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[a[7]||(a[7]=(0,o.Lk)("h1",{id:"foria-f00mb00-04-1",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#foria-f00mb00-04-1"},[(0,o.Lk)("span",null,"FORIA F00MB00-04-1")])],-1)),(0,o.Lk)("table",null,[a[6]||(a[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[a[2]||(a[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"F00MB00-04-1")],-1)),(0,o.Lk)("tr",null,[a[1]||(a[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(t,{to:"/supported-devices/#v=FORIA"},{default:(0,o.k6)((()=>a[0]||(a[0]=[(0,o.eW)("FORIA")]))),_:1,__:[0]})])]),a[3]||(a[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"4 scenes switch")],-1)),a[4]||(a[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"vibration, approach, illumination, backlight, action")],-1)),a[5]||(a[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/F00MB00-04-1.png",alt:"FORIA F00MB00-04-1"})])],-1))])]),a[8]||(a[8]=(0,o.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="vibration-binary" tabindex="-1"><a class="header-anchor" href="#vibration-binary"><span>Vibration (binary)</span></a></h3><p>Enable vibration. Value can be found in the published state on the <code>vibration</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;vibration&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> vibration is ON, if <code>OFF</code> OFF.</p><h3 id="approach-binary" tabindex="-1"><a class="header-anchor" href="#approach-binary"><span>Approach (binary)</span></a></h3><p>Enable approach detection. Value can be found in the published state on the <code>approach</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;approach&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> approach is ON, if <code>OFF</code> OFF.</p><h3 id="illumination-binary" tabindex="-1"><a class="header-anchor" href="#illumination-binary"><span>Illumination (binary)</span></a></h3><p>Enable illumination detection. Value can be found in the published state on the <code>illumination</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;illumination&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> illumination is ON, if <code>OFF</code> OFF.</p><h3 id="backlight-binary" tabindex="-1"><a class="header-anchor" href="#backlight-binary"><span>Backlight (binary)</span></a></h3><p>Enable backlight. Value can be found in the published state on the <code>backlight</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;backlight&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> backlight is ON, if <code>OFF</code> OFF.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>scene_1</code>, <code>scene_2</code>, <code>scene_3</code>, <code>scene_4</code>.</p>',11))])}]]),d=JSON.parse('{"path":"/devices/F00MB00-04-1.html","title":"FORIA F00MB00-04-1 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"FORIA F00MB00-04-1 control via MQTT","description":"Integrate your FORIA F00MB00-04-1 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2024-04-29T19:24:38.000Z"},"git":{"updatedTime":1749145894000,"contributors":[{"name":"Arthur Bernardes","username":"","email":"arthur.bernardes1@gmail.com","commits":1}],"changelog":[{"hash":"aeb82e4b3fb2eb795ef90bc5f984f9a20575e13f","time":1749145894000,"email":"arthur.bernardes1@gmail.com","author":"Arthur Bernardes","message":"Add AVATTO ZWOT12 (#3846)"}]},"filePathRelative":"devices/F00MB00-04-1.md"}')}}]);