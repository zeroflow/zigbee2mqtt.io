"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[18584],{87656:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>s,data:()=>n});var a=o(6199);const i={},s=(0,o(21065).A)(i,[["render",function(e,t){const o=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[11]||(t[11]=(0,a.Lk)("h1",{id:"bosch-bmct-slz",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#bosch-bmct-slz"},[(0,a.Lk)("span",null,"Bosch BMCT-SLZ")])],-1)),(0,a.Lk)("table",null,[t[6]||(t[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[t[2]||(t[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"BMCT-SLZ")],-1)),(0,a.Lk)("tr",null,[t[1]||(t[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(o,{to:"/supported-devices/#v=Bosch"},{default:(0,a.k6)((()=>t[0]||(t[0]=[(0,a.eW)("Bosch")]))),_:1,__:[0]})])]),t[3]||(t[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Light/shutter control unit II")],-1)),t[4]||(t[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"device_mode")],-1)),t[5]||(t[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/BMCT-SLZ.png",alt:"Bosch BMCT-SLZ"})])],-1))])]),t[12]||(t[12]=(0,a.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>To pair this device you have to install the device via its installation code. The installation code can be obtained by scanning the QR-code on the device with your smartphone. Then get the device into pairing mode. In zigbee2mqtt navigate to &quot;Settings&quot; --&gt; &quot;Tools&quot; and click on &quot;Add install code&quot;. Paste the code you got from the QR-code and confirm by clicking &quot;OK&quot; which will get zigbee2mqtt into pairing mode automatically. Wait for your device to be joined.</p><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><p>The device can operate either as a two-channel light switch or as roller shutter/window blind. After pairing, the device mode is initially set to &#39;disabled&#39; and will not accept any switching or open/close commands. The device mode must be set to &#39;light&#39; or &#39;shutter&#39; via the frontend or by publishing <code>{&quot;device_mode&quot;: &quot;shutter&quot;}</code> or <code>{&quot;device_mode&quot;: &quot;light&quot;}</code> to <code>zigbee2mqtt/FRIENDLY_NAME/set</code>.</p><h3 id="factory-reset" tabindex="-1"><a class="header-anchor" href="#factory-reset"><span>Factory reset</span></a></h3><p>To reset the device to factory settings, press and hold the device&#39;s main button on the front until the device&#39;s LED starts flashing. Release the main button and press and hold it again until the device&#39;s LED is lighting up green. The device will then restart and look for a Zigbee network to join. In case something went wrong, the device&#39;s LED will flash red.</p><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates"><span>OTA updates</span></a></h2>',8)),(0,a.Lk)("p",null,[t[8]||(t[8]=(0,a.eW)("This device supports OTA updates, for more information see ")),(0,a.bF)(o,{to:"/guide/usage/ota_updates.html"},{default:(0,a.k6)((()=>t[7]||(t[7]=[(0,a.eW)("OTA updates")]))),_:1,__:[7]}),t[9]||(t[9]=(0,a.eW)("."))]),t[13]||(t[13]=(0,a.Lk)("h2",{id:"options",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#options"},[(0,a.Lk)("span",null,"Options")])],-1)),(0,a.Lk)("p",null,[(0,a.Lk)("em",null,[(0,a.bF)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,a.k6)((()=>t[10]||(t[10]=[(0,a.eW)("How to use device type specific configuration")]))),_:1,__:[10]})])]),t[14]||(t[14]=(0,a.Fv)('<ul><li><p><code>invert_cover</code>: Inverts the cover position, false: open=100,close=0, true: open=0,close=100 (default false). The value must be <code>true</code> or <code>false</code></p></li><li><p><code>cover_position_tilt_disable_report</code>: Do not publish set cover target position as a normal &#39;position&#39; value (default false). The value must be <code>true</code> or <code>false</code></p></li><li><p><code>state_action</code>: State actions will also be published as &#39;action&#39; when true (default false). The value must be <code>true</code> or <code>false</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="device-mode-enum" tabindex="-1"><a class="header-anchor" href="#device-mode-enum"><span>Device mode (enum)</span></a></h3><p>Device mode. Value can be found in the published state on the <code>device_mode</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;device_mode&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;device_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>light</code>, <code>shutter</code>, <code>disabled</code>.</p>',4))])}]]),n=JSON.parse('{"path":"/devices/BMCT-SLZ.html","title":"Bosch BMCT-SLZ control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Bosch BMCT-SLZ control via MQTT","description":"Integrate your Bosch BMCT-SLZ via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-04-27T17:34:39.000Z"},"git":{"updatedTime":1749145894000,"contributors":[{"name":"Arthur Bernardes","username":"","email":"arthur.bernardes1@gmail.com","commits":1}],"changelog":[{"hash":"aeb82e4b3fb2eb795ef90bc5f984f9a20575e13f","time":1749145894000,"email":"arthur.bernardes1@gmail.com","author":"Arthur Bernardes","message":"Add AVATTO ZWOT12 (#3846)"}]},"filePathRelative":"devices/BMCT-SLZ.md"}')}}]);