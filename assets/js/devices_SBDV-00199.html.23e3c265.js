"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[12367],{30440:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>a,data:()=>c});var i=t(6199);const d={},a=(0,t(21065).A)(d,[["render",function(e,o){const t=(0,i.g2)("RouteLink");return(0,i.uX)(),(0,i.CE)("div",null,[o[11]||(o[11]=(0,i.Lk)("h1",{id:"sber-sbdv-00199",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#sber-sbdv-00199"},[(0,i.Lk)("span",null,"Sber SBDV-00199")])],-1)),(0,i.Lk)("table",null,[o[6]||(o[6]=(0,i.Lk)("thead",null,[(0,i.Lk)("tr",null,[(0,i.Lk)("th"),(0,i.Lk)("th")])],-1)),(0,i.Lk)("tbody",null,[o[2]||(o[2]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Model"),(0,i.Lk)("td",null,"SBDV-00199")],-1)),(0,i.Lk)("tr",null,[o[1]||(o[1]=(0,i.Lk)("td",null,"Vendor",-1)),(0,i.Lk)("td",null,[(0,i.bF)(t,{to:"/supported-devices/#v=Sber"},{default:(0,i.k6)((()=>o[0]||(o[0]=[(0,i.eW)("Sber")]))),_:1,__:[0]})])]),o[3]||(o[3]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Description"),(0,i.Lk)("td",null,"Smart Wall Switch (with neutral, two buttons)")],-1)),o[4]||(o[4]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Exposes"),(0,i.Lk)("td",null,"action, switch (state), power_on_behavior, relay_mode, allow_double_click, identify, led_indicator_on_enable, led_indicator_on_h, led_indicator_on_s, led_indicator_on_b, led_indicator_off_enable, led_indicator_off_h, led_indicator_off_s, led_indicator_off_b")],-1)),o[5]||(o[5]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Picture"),(0,i.Lk)("td",null,[(0,i.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/SBDV-00199.png",alt:"Sber SBDV-00199"})])],-1))])]),o[12]||(o[12]=(0,i.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>To put the device in pairing mode, detach button covers and press pairing button for 5 seconds until LEDs start breathing animation, then release pairing button. When pairing process is completed, LEDs animation will stop.</p><h3 id="factory-reset" tabindex="-1"><a class="header-anchor" href="#factory-reset"><span>Factory reset</span></a></h3><p>This device resets itself to factory settings when it is removed from the Zigbee network, and this removal is initiated by coordinator (i.e. via frontend or by sending command to <code>zigbee2mqtt/bridge/request/device/remove</code> topic). If device is removed by pressing the pairing button (manual pairing), then its settings will remain intact.</p><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates"><span>OTA updates</span></a></h2>',6)),(0,i.Lk)("p",null,[o[8]||(o[8]=(0,i.eW)("This device supports OTA updates, for more information see ")),(0,i.bF)(t,{to:"/guide/usage/ota_updates.html"},{default:(0,i.k6)((()=>o[7]||(o[7]=[(0,i.eW)("OTA updates")]))),_:1,__:[7]}),o[9]||(o[9]=(0,i.eW)("."))]),o[13]||(o[13]=(0,i.Lk)("h2",{id:"options",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#options"},[(0,i.Lk)("span",null,"Options")])],-1)),(0,i.Lk)("p",null,[(0,i.Lk)("em",null,[(0,i.bF)(t,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,i.k6)((()=>o[10]||(o[10]=[(0,i.eW)("How to use device type specific configuration")]))),_:1,__:[10]})])]),o[14]||(o[14]=(0,i.Fv)('<ul><li><p><code>identify_timeout</code>: Sets duration of identification procedure in seconds (i.e., how long device would flash). Value ranges from 1 to 30 seconds (default 3). The value must be a number with a minimum value of <code>1</code> and with a with a maximum value of <code>30</code></p></li><li><p><code>state_action</code>: State actions will also be published as &#39;action&#39; when true (default false). The value must be <code>true</code> or <code>false</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>hold_switch_1</code>, <code>hold_switch_2</code>, <code>single_switch_1</code>, <code>single_switch_2</code>, <code>double_switch_1</code>, <code>double_switch_2</code>.</p><h3 id="switch-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-switch-1-endpoint"><span>Switch (switch_1 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_switch_1</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_switch_1&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_switch_1&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_switch_1&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_switch_1&quot;: &quot;&quot;}</code>.</p><h3 id="_1-power-on-behavior-enum-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#_1-power-on-behavior-enum-switch-1-endpoint"><span>(1) Power-on behavior (enum, switch_1 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;power_on_behavior_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_switch_1&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>on</code>, <code>toggle</code>, <code>previous</code>.</p><h3 id="_1-relay-mode-enum-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#_1-relay-mode-enum-switch-1-endpoint"><span>(1) Relay mode (enum, switch_1 endpoint)</span></a></h3><p>Decoupled mode. Value can be found in the published state on the <code>relay_mode_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;relay_mode_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;relay_mode_switch_1&quot;: NEW_VALUE}</code>. The possible values are: <code>control_relay</code>, <code>decoupled</code>.</p><h3 id="_1-allow-double-clicks-binary-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#_1-allow-double-clicks-binary-switch-1-endpoint"><span>(1) Allow double clicks (binary, switch_1 endpoint)</span></a></h3><p>Allow detection of double clicks, may introduce delay in reaction when enabled. Value can be found in the published state on the <code>allow_double_click_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;allow_double_click_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;allow_double_click_switch_1&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> (1) Allow double clicks is ON, if <code>OFF</code> OFF.</p><h3 id="_1-identify-enum-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#_1-identify-enum-switch-1-endpoint"><span>(1) Identify (enum, switch_1 endpoint)</span></a></h3><p>Initiate device identification. Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;identify_switch_1&quot;: NEW_VALUE}</code>. The possible values are: <code>identify</code>.</p><h3 id="_1-led-indication-binary-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#_1-led-indication-binary-switch-1-endpoint"><span>(1) LED indication (binary, switch_1 endpoint)</span></a></h3><p>Is LED indicator enabled in ON state. Value can be found in the published state on the <code>led_indicator_on_enable_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_on_enable_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_on_enable_switch_1&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> (1) LED indication is ON, if <code>OFF</code> OFF.</p><h3 id="_1-hue-numeric-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#_1-hue-numeric-switch-1-endpoint"><span>(1) Hue (numeric, switch_1 endpoint)</span></a></h3><p>Hue of LED in ON state. Value can be found in the published state on the <code>led_indicator_on_h_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_on_h_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_on_h_switch_1&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>359</code>. The unit of this value is <code>Â°</code>.</p><h3 id="_1-saturation-numeric-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#_1-saturation-numeric-switch-1-endpoint"><span>(1) Saturation (numeric, switch_1 endpoint)</span></a></h3><p>Saturation of LED in ON state. Value can be found in the published state on the <code>led_indicator_on_s_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_on_s_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_on_s_switch_1&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>254</code>.</p><h3 id="_1-brightness-numeric-switch-1-endpoint" tabindex="-1"><a class="header-anchor" href="#_1-brightness-numeric-switch-1-endpoint"><span>(1) Brightness (numeric, switch_1 endpoint)</span></a></h3><p>Brightness of LED in ON state. Value can be found in the published state on the <code>led_indicator_on_b_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_on_b_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_on_b_switch_1&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>254</code>.</p><h3 id="_1-led-indication-binary-switch-1-endpoint-1" tabindex="-1"><a class="header-anchor" href="#_1-led-indication-binary-switch-1-endpoint-1"><span>(1) LED indication (binary, switch_1 endpoint)</span></a></h3><p>Is LED indicator enabled in OFF state. Value can be found in the published state on the <code>led_indicator_off_enable_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_off_enable_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_off_enable_switch_1&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> (1) LED indication is ON, if <code>OFF</code> OFF.</p><h3 id="_1-hue-numeric-switch-1-endpoint-1" tabindex="-1"><a class="header-anchor" href="#_1-hue-numeric-switch-1-endpoint-1"><span>(1) Hue (numeric, switch_1 endpoint)</span></a></h3><p>Hue of LED in OFF state. Value can be found in the published state on the <code>led_indicator_off_h_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_off_h_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_off_h_switch_1&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>359</code>. The unit of this value is <code>Â°</code>.</p><h3 id="_1-saturation-numeric-switch-1-endpoint-1" tabindex="-1"><a class="header-anchor" href="#_1-saturation-numeric-switch-1-endpoint-1"><span>(1) Saturation (numeric, switch_1 endpoint)</span></a></h3><p>Saturation of LED in OFF state. Value can be found in the published state on the <code>led_indicator_off_s_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_off_s_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_off_s_switch_1&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>254</code>.</p><h3 id="_1-brightness-numeric-switch-1-endpoint-1" tabindex="-1"><a class="header-anchor" href="#_1-brightness-numeric-switch-1-endpoint-1"><span>(1) Brightness (numeric, switch_1 endpoint)</span></a></h3><p>Brightness of LED in OFF state. Value can be found in the published state on the <code>led_indicator_off_b_switch_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_off_b_switch_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_off_b_switch_1&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>254</code>.</p><h3 id="switch-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-switch-2-endpoint"><span>Switch (switch_2 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_switch_2</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_switch_2&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_switch_2&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_switch_2&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_switch_2&quot;: &quot;&quot;}</code>.</p><h3 id="_2-power-on-behavior-enum-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-power-on-behavior-enum-switch-2-endpoint"><span>(2) Power-on behavior (enum, switch_2 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;power_on_behavior_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_switch_2&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>on</code>, <code>toggle</code>, <code>previous</code>.</p><h3 id="_2-relay-mode-enum-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-relay-mode-enum-switch-2-endpoint"><span>(2) Relay mode (enum, switch_2 endpoint)</span></a></h3><p>Decoupled mode. Value can be found in the published state on the <code>relay_mode_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;relay_mode_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;relay_mode_switch_2&quot;: NEW_VALUE}</code>. The possible values are: <code>control_relay</code>, <code>decoupled</code>.</p><h3 id="_2-allow-double-clicks-binary-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-allow-double-clicks-binary-switch-2-endpoint"><span>(2) Allow double clicks (binary, switch_2 endpoint)</span></a></h3><p>Allow detection of double clicks, may introduce delay in reaction when enabled. Value can be found in the published state on the <code>allow_double_click_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;allow_double_click_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;allow_double_click_switch_2&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> (2) Allow double clicks is ON, if <code>OFF</code> OFF.</p><h3 id="_2-identify-enum-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-identify-enum-switch-2-endpoint"><span>(2) Identify (enum, switch_2 endpoint)</span></a></h3><p>Initiate device identification. Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;identify_switch_2&quot;: NEW_VALUE}</code>. The possible values are: <code>identify</code>.</p><h3 id="_2-led-indication-binary-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-led-indication-binary-switch-2-endpoint"><span>(2) LED indication (binary, switch_2 endpoint)</span></a></h3><p>Is LED indicator enabled in ON state. Value can be found in the published state on the <code>led_indicator_on_enable_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_on_enable_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_on_enable_switch_2&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> (2) LED indication is ON, if <code>OFF</code> OFF.</p><h3 id="_2-hue-numeric-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-hue-numeric-switch-2-endpoint"><span>(2) Hue (numeric, switch_2 endpoint)</span></a></h3><p>Hue of LED in ON state. Value can be found in the published state on the <code>led_indicator_on_h_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_on_h_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_on_h_switch_2&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>359</code>. The unit of this value is <code>Â°</code>.</p><h3 id="_2-saturation-numeric-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-saturation-numeric-switch-2-endpoint"><span>(2) Saturation (numeric, switch_2 endpoint)</span></a></h3><p>Saturation of LED in ON state. Value can be found in the published state on the <code>led_indicator_on_s_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_on_s_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_on_s_switch_2&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>254</code>.</p><h3 id="_2-brightness-numeric-switch-2-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-brightness-numeric-switch-2-endpoint"><span>(2) Brightness (numeric, switch_2 endpoint)</span></a></h3><p>Brightness of LED in ON state. Value can be found in the published state on the <code>led_indicator_on_b_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_on_b_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_on_b_switch_2&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>254</code>.</p><h3 id="_2-led-indication-binary-switch-2-endpoint-1" tabindex="-1"><a class="header-anchor" href="#_2-led-indication-binary-switch-2-endpoint-1"><span>(2) LED indication (binary, switch_2 endpoint)</span></a></h3><p>Is LED indicator enabled in OFF state. Value can be found in the published state on the <code>led_indicator_off_enable_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_off_enable_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_off_enable_switch_2&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> (2) LED indication is ON, if <code>OFF</code> OFF.</p><h3 id="_2-hue-numeric-switch-2-endpoint-1" tabindex="-1"><a class="header-anchor" href="#_2-hue-numeric-switch-2-endpoint-1"><span>(2) Hue (numeric, switch_2 endpoint)</span></a></h3><p>Hue of LED in OFF state. Value can be found in the published state on the <code>led_indicator_off_h_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_off_h_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_off_h_switch_2&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>359</code>. The unit of this value is <code>Â°</code>.</p><h3 id="_2-saturation-numeric-switch-2-endpoint-1" tabindex="-1"><a class="header-anchor" href="#_2-saturation-numeric-switch-2-endpoint-1"><span>(2) Saturation (numeric, switch_2 endpoint)</span></a></h3><p>Saturation of LED in OFF state. Value can be found in the published state on the <code>led_indicator_off_s_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_off_s_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_off_s_switch_2&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>254</code>.</p><h3 id="_2-brightness-numeric-switch-2-endpoint-1" tabindex="-1"><a class="header-anchor" href="#_2-brightness-numeric-switch-2-endpoint-1"><span>(2) Brightness (numeric, switch_2 endpoint)</span></a></h3><p>Brightness of LED in OFF state. Value can be found in the published state on the <code>led_indicator_off_b_switch_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_indicator_off_b_switch_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_indicator_off_b_switch_2&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>254</code>.</p>',56))])}]]),c=JSON.parse('{"path":"/devices/SBDV-00199.html","title":"Sber SBDV-00199 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Sber SBDV-00199 control via MQTT","description":"Integrate your Sber SBDV-00199 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-05-01T17:56:32.000Z"},"git":{"updatedTime":1749145894000,"contributors":[{"name":"Arthur Bernardes","username":"","email":"arthur.bernardes1@gmail.com","commits":1}],"changelog":[{"hash":"aeb82e4b3fb2eb795ef90bc5f984f9a20575e13f","time":1749145894000,"email":"arthur.bernardes1@gmail.com","author":"Arthur Bernardes","message":"Add AVATTO ZWOT12 (#3846)"}]},"filePathRelative":"devices/SBDV-00199.md"}')}}]);