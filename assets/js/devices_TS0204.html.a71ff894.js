"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[78123],{96360:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>n,data:()=>l});var s=t(6199);const r={},n=(0,t(21065).A)(r,[["render",function(e,a){const t=(0,s.g2)("RouteLink");return(0,s.uX)(),(0,s.CE)("div",null,[a[8]||(a[8]=(0,s.Lk)("h1",{id:"tuya-ts0204",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#tuya-ts0204"},[(0,s.Lk)("span",null,"Tuya TS0204")])],-1)),(0,s.Lk)("table",null,[a[7]||(a[7]=(0,s.Lk)("thead",null,[(0,s.Lk)("tr",null,[(0,s.Lk)("th"),(0,s.Lk)("th")])],-1)),(0,s.Lk)("tbody",null,[a[2]||(a[2]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Model"),(0,s.Lk)("td",null,"TS0204")],-1)),(0,s.Lk)("tr",null,[a[1]||(a[1]=(0,s.Lk)("td",null,"Vendor",-1)),(0,s.Lk)("td",null,[(0,s.bF)(t,{to:"/supported-devices/#v=Tuya"},{default:(0,s.k6)((()=>a[0]||(a[0]=[(0,s.eW)("Tuya")]))),_:1,__:[0]})])]),a[3]||(a[3]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Description"),(0,s.Lk)("td",null,"Gas sensor")],-1)),a[4]||(a[4]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Exposes"),(0,s.Lk)("td",null,"gas, tamper")],-1)),a[5]||(a[5]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Picture"),(0,s.Lk)("td",null,[(0,s.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/TS0204.png",alt:"Tuya TS0204"})])],-1)),a[6]||(a[6]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"White-label"),(0,s.Lk)("td",null,"Tesla Smart TSL-SEN-GAS")],-1))])]),a[9]||(a[9]=(0,s.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>Press the button about 5 seconds until the light changes from red to green. Release the button (it should beep twice now). Green light starts flashing. Press again one time.</p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="gas-binary" tabindex="-1"><a class="header-anchor" href="#gas-binary"><span>Gas (binary)</span></a></h3><p>Indicates whether the device detected gas. Value can be found in the published state on the <code>gas</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> gas is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p>',8))])}]]),l=JSON.parse('{"path":"/devices/TS0204.html","title":"Tuya TS0204 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Tuya TS0204 control via MQTT","description":"Integrate your Tuya TS0204 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2019-12-15T17:27:48.000Z"},"git":{"updatedTime":1749145894000,"contributors":[{"name":"Arthur Bernardes","username":"","email":"arthur.bernardes1@gmail.com","commits":1}],"changelog":[{"hash":"aeb82e4b3fb2eb795ef90bc5f984f9a20575e13f","time":1749145894000,"email":"arthur.bernardes1@gmail.com","author":"Arthur Bernardes","message":"Add AVATTO ZWOT12 (#3846)"}]},"filePathRelative":"devices/TS0204.md"}')}}]);